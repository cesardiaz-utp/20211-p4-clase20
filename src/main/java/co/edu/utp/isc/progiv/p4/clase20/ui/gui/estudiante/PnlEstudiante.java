/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.utp.isc.progiv.p4.clase20.ui.gui.estudiante;

import co.edu.utp.isc.progiv.p4.clase20.datos.entidades.Estudiante;
import co.edu.utp.isc.progiv.p4.clase20.excepciones.BaseDatosException;
import co.edu.utp.isc.progiv.p4.clase20.excepciones.FaltanValoresException;
import co.edu.utp.isc.progiv.p4.clase20.excepciones.NoEncontradoException;
import co.edu.utp.isc.progiv.p4.clase20.logica.UniversidadFacade;
import java.awt.Cursor;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;

/**
 *
 * @author cdiaz
 */
public class PnlEstudiante extends javax.swing.JPanel {

    private final String titulo;
    private UniversidadFacade facade;
    private EstudianteTableModel tableModel;

    /**
     * Creates new form PnlEstudiante
     *
     * @param titulo
     */
    public PnlEstudiante(String titulo) {
        this.titulo = titulo;
        initComponents();
        iniciarPanel();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        tblEstudiantes = new javax.swing.JTable();
        javax.swing.JPanel jPanel3 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        javax.swing.JSeparator jSeparator1 = new javax.swing.JSeparator();
        btnEliminar = new javax.swing.JButton();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        txtIdentificacion = new javax.swing.JTextField();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        txtTelefonos = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setLayout(new java.awt.BorderLayout());

        tblEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblEstudiantes);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel3.add(btnNuevo);

        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 0));
        jPanel3.add(jSeparator1);

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel3.add(btnEliminar);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        add(jPanel1);

        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0, 5, 0};
        jPanel2Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel2.setLayout(jPanel2Layout);

        jLabel1.setText("Identificación");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        txtIdentificacion.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanel2.add(txtIdentificacion, gridBagConstraints);

        jLabel2.setText("Nombres *");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(txtNombres, gridBagConstraints);

        jLabel3.setText("Apellidos *");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(txtApellidos, gridBagConstraints);

        jLabel4.setText("Teléfono");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(txtTelefonos, gridBagConstraints);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(btnGuardar, gridBagConstraints);

        add(jPanel2);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarCampos();
        txtNombres.requestFocus();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JTable tblEstudiantes;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtIdentificacion;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtTelefonos;
    // End of variables declaration//GEN-END:variables

    private void iniciarPanel() {
        facade = new UniversidadFacade();

        // Si hay personas en libreta , llena la lista de personas
        List<Estudiante> estudiantes = new ArrayList<>();
        try {
            estudiantes = facade.listarEstudiantes();
        } catch (BaseDatosException | NoEncontradoException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
                    titulo, JOptionPane.ERROR_MESSAGE);
        }

        tableModel = new EstudianteTableModel(estudiantes);
        tblEstudiantes.setModel(tableModel);

        // Inicializar la escucha de la seleccion en la tabla
        tblEstudiantes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblEstudiantes.getSelectionModel()
                .addListSelectionListener((ListSelectionEvent e) -> {
                    int row = tblEstudiantes.getSelectedRow();
                    if (row == -1) {
                        limpiarCampos();
                    } else {
                        cargarCampos(tableModel.getDato(row));
                    }
                    btnEliminar.setEnabled(row != -1);
                });
    }

    private void limpiarCampos() {
        tblEstudiantes.clearSelection();

        txtIdentificacion.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtTelefonos.setText("");
    }

    private void cargarCampos(Estudiante dato) {
        txtIdentificacion.setText(dato.getId().toString());
        txtNombres.setText(dato.getNombres());
        txtApellidos.setText(dato.getApellidos());
        txtTelefonos.setText(dato.getTelefono());
    }

    private void eliminar() {
        JOptionPane.showMessageDialog(this, "No se ha implementado el borrado de estudiantes!",
                titulo, JOptionPane.INFORMATION_MESSAGE);
//        int row = tblEstudiantes.getSelectedRow();
//        if (row != -1) {
//            if (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(this,
//                    "¿Está seguro que desea eliminar esta persona?",
//                    titulo, JOptionPane.QUESTION_MESSAGE)) {
//                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//
//                var p = tableModel.getDato(row);
//                facade.eliminar(p);
//
//                tableModel.actualizarDatos();
//
//                JOptionPane.showMessageDialog(this, "Persona eliminada exitosamente!",
//                        titulo, JOptionPane.INFORMATION_MESSAGE);
//                setCursor(Cursor.getDefaultCursor());
//            }
//        }
    }

    private void guardar() {
        try {
            // Validar campos obligatorios
            validarCampos();

            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            
            // Guardar datos
            Estudiante estudiante = facade.guardarEstudiante(
                    txtNombres.getText().trim(),
                    txtApellidos.getText().trim(),
                    txtTelefonos.getText().trim());

            // Actualizo los atos en la tabla
            tableModel.addDato(estudiante);
            int row = tableModel.getRowCount() - 1;
            tblEstudiantes.getSelectionModel().setSelectionInterval(row, row);

            JOptionPane.showMessageDialog(this, "Estudiante guardado exitosamente!",
                    titulo, JOptionPane.INFORMATION_MESSAGE);
        } catch (HeadlessException | FaltanValoresException | BaseDatosException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
                    titulo, JOptionPane.ERROR_MESSAGE);
        }
        setCursor(Cursor.getDefaultCursor());
    }

    private void validarCampos() throws FaltanValoresException {
        // Valido los campos
        if (txtNombres.getText().isBlank()) {
            throw new FaltanValoresException("El campo 'Nombres' es un campo obligatorio");
        }
        if (txtApellidos.getText().isBlank()) {
            throw new FaltanValoresException("El campo 'Apellidos' es un campo obligatorio");
        }
        if (!txtTelefonos.getText().isBlank()
                && !txtTelefonos.getText().trim().matches("[0-9]+")) {
            throw new FaltanValoresException("El campo 'Telefono' tiene caracteres inválidos");
        }
    }
}
